procedure main1 {
    a = 1;
    b = 2;
    c = a + b;
    while (c < 10) {
        read d;
        read e;
        if (d > e) then {
            d = e - 7;
            print d;
            print e;
            a = a + d;
            b = b + e;
        } else {
            a = a * b;
            b = b * c;
        }
        print c;
        c = c + 1;
    }
    call main2;
    f = d * e + c;
    g = f % 5;
    h = a / d + f * b + 4; 
}

procedure main2 {
    i = 1;
    j = 2;
    k = a + b;
    while (k < 10) {
        read l;
        read m;
        if (l > m) then {
            l = m - 7;
            print l;
            print m;
            i = i + l;
            j = j + m;
        } else {
            i = i * j;
            j = j * c;
        }
        print k;
        k = k + 1;
    }
    call main3;
    n = l * m + k;
    o = n % 5;
    p = i / l + n * j + 4; 
}

procedure main3 {
    q = 1;
    r = 2;
    s = q + r;
    while (s < 10) {
        read t;
        read u;
        if (t > u) then {
            t = u - 7;
            print t;
            print u;
            q = q + t;
            r = r + u;
        } else {
            q = q * r;
            r = r * s;
        }
        print s;
        s = s + 1;
    }
    call main4;
    v = t * u + s;
    w = v % 5;
    x = q / t + v * r + 4; 
}

procedure main4 {
    y = 1;
    z = 2;
    aa = y + z;
    while (aa < 10) {
        read ab;
        read ac;
        if (ab > ac) then {
            ab = ac - 7;
            print ab;
            print ac;
            y = y + ab;
            z = z + ac;
        } else {
            y = y * z;
            z = z * aa;
        }
        print aa;
        aa = aa + 1;
    }
    call main5;
    ad = ab * ac + aa;
    ae = ad % 5;
    af = y / ab + ad * z + 4; 
}

procedure main5 {
    ag = 1;
    ah = 2;
    ai = ag + ah;
    while (ai < 10) {
        read aj;
        read ak;
        if (aj > ak) then {
            aj = ak - 7;
            print aj;
            print ak;
            ag = ag + aj;
            ah = ah + ak;
        } else {
            ag = ag * ah;
            ah = ah * ai;
        }
        print ai;
        ai = ai + 1;
    }
    call main6;
    al = aj * ak + ai;
    am = al % 5;
    an = ag / aj + al * ah + 4; 
}

procedure main6 {
    ao = 1;
    ap = 2;
    aq = ao + ap;
    while (aq < 10) {
        read ar;
        read as;
        if (ar > as) then {
            ar = as - 7;
            print ar;
            print as;
            ao = ao + ar;
            ap = ap + as;
        } else {
            ao = ao * ap;
            ap = ap * aq;
        }
        print aq;
        aq = aq + 1;
    }
    call main7;
    at = ar * as + aq;
    au = at % 5;
    av = ao / ar + at * ap + 4; 
}

procedure main7 {
    aw = 1;
    ax = 2;
    ay = aw + ax;
    while (ay < 10) {
        read az;
        read ba;
        if (az > ba) then {
            az = ba - 7;
            print az;
            print ba;
            aw = aw + az;
            ax = ax + ba;
        } else {
            aw = aw * ax;
            ax = ax * ay;
        }
        print ay;
        ay = ay + 1;
    }
    call main8;
    bb = az * ba + ay;
    bc = bb % 5;
    bd = aw / az + bb * ax + 4; 
}

procedure main8 {
    be = 1;
    bf = 2;
    bg = be + bf;
    while (bg < 10) {
        read bh;
        read bi;
        if (bh > bi) then {
            bh = bi - 7;
            print bh;
            print bi;
            be = be + bh;
            bf = bf + bi;
        } else {
            be = be * bf;
            bf = bf * bg;
        }
        print bg;
        bg = bg + 1;
    }
    call main9;
    bj = bh * bi + bg;
    bk = bj % 5;
    bl = be / bh + bj * bf + 4; 
}

procedure main9 {
    bm = 1;
    bn = 2;
    bo = bm + bn;
    while (bo < 10) {
        read bp;
        read bq;
        if (bp > bq) then {
            bp = bq - 7;
            print bp;
            print bq;
            bm = bm + bp;
            bn = bn + bq;
        } else {
            bm = bm * bn;
            bn = bn * bo;
        }
        print bo;
        bo = bo + 1;
    }
    call main10;
    br = bp * bq + bo;
    bs = br % 5;
    bt = bm / bp + br * bn + 4; 
}

procedure main10 {
    bu = 1;
    bv = 2;
    bw = bu + bv;
    while (bw < 10) {
        read bx;
        read by;
        if (bx > by) then {
            bx = by - 7;
            print bx;
            print by;
            bu = bu + bx;
            bv = bv + by;
        } else {
            bu = bu * bv;
            bv = bv * bw;
        }
        print bw;
        bw = bw + 1;
    }
    call main11;
    bz = bx * by + bw;
    ca = bz % 5;
    cb = bu / bx + bz * bv + 4; 
}

procedure main11 {
    cc = 1;
    cd = 2;
    ce = cc + cd;
    while (ce < 10) {
        read cf;
        read cg;
        if (cf > cg) then {
            cf = cg - 7;
            print cf;
            print cg;
            cc = cc + cf;
            cd = cd + cg;
        } else {
            cc = cc * cd;
            cd = cd * ce;
        }
        print ce;
        ce = ce + 1;
    }
    call main12;
    ch = cf * cg + ce;
    ci = ch % 5;
    cj = cc / cf + ch * cd + 4; 
}

procedure main12 {
    ck = 1;
    cl = 2;
    cm = ck + cl;
    while (cm < 10) {
        read cn;
        read co;
        if (cn > co) then {
            cn = co - 7;
            print cn;
            print co;
            ck = ck + cn;
            cl = cl + co;
        } else {
            ck = ck * cl;
            cl = cl * cm;
        }
        print cm;
        cm = cm + 1;
    }
    cp = cn * co + cm;
    cq = cp % 5;
    cr = ck / cn + cp * cl + 4; 
}
