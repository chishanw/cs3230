name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Build
        shell: bash
        run: |
          cd Team02/Code02
          mkdir build
          cd build
          cmake -A Win32 ..
          cmake --build . --target unit_testing --config ${{env.BUILD_TYPE}}
          cmake --build . --target integration_testing --config ${{env.BUILD_TYPE}}
          cmake --build . --target autotester --config ${{env.BUILD_TYPE}}

      - name: List Files in ${{env.BUILD_TYPE}}
        working-directory: ./Team02/Code02/build/src/autotester/${{env.BUILD_TYPE}}/
        run: ls

      - name: Unit Test
        working-directory: ./Team02/Code02/build/src/unit_testing/${{env.BUILD_TYPE}}/
        run: ./unit_testing.exe -d yes

      - name: Integration Test
        working-directory: ./Team02/Code02/build/src/integration_testing/${{env.BUILD_TYPE}}/
        run: ./integration_testing.exe -d yes

      - name: System Tests
        working-directory: ./
        run: python run-system-tests.py --win_mode --verbose

  macos-build:
    runs-on: macos-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        working-directory: ./Team02/Code02
        run: cmake -B build/ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        working-directory: ./Team02/Code02
        run: cmake --build build/ --config ${{env.BUILD_TYPE}}

      - name: Unit & Integration Test
        working-directory: ./Team02/Code02/build/src/
        run: |
          unit_testing/unit_testing -d yes
          integration_testing/integration_testing -d yes

      - name: System Tests
        working-directory: ./
        run: python run-system-tests.py --verbose

  cpplint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install cpplint
      - run: |
          cpplint \
          --filter=-legal/copyright,-build/header_guard,-build/namespaces,-runtime/int \
          --exclude=Team02/Code02/lib/ \
          --exclude=Team02/Code02/cmake-build-debug/ \
          --exclude=Team02/Code02/src/autotester/ \
          --exclude=Team02/Code02/src/autotester_gui/ \
          --recursive .
